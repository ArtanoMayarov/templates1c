{1,
{4,
{"Текущий стандарт СУТ",1,0,"",""},
{0,
{"ПолучениеОбработки",0,0,"Обра","<?""Имя переменной""> = ОбщегоНазначения.ПолучитьОбработку(""<?""ИмяОбработки"", Обработка>"");
Если Ложь Тогда <?""Имя переменной""> = Обработки.<?""ИмяОбработки"", Обработка>.Создать() КонецЕсли;
"}
},
{0,
{"ПолучениеОтчета",0,0,"Отчет","ОбщегоНазначения.ПолучитьОбработку(""<?""ИмяОтчета"", Отчет>"", ""Отчет"");
Если Ложь Тогда <?""Имя переменной""> = Отчеты.<?""ИмяОтчета"", Отчет>.Создать() КонецЕсли;"}
},
{0,
{"Корректировка остатков РН",0,0,"[Новый]Корректировка остатков","ДокМенеджер = Документы.ВводОстатковПоРегистру;
ТабКорректировки  = <?>//Таблица с движениями. Достаточно наличие полей с измерениями и ресурсами. 
ДатаКорректировки = //Дата, которой будут произведены корректировки

МетаданныеРегистра = Метаданные.РегистрыНакопления.<?"""", РегистрНакопления>;
ЭтоВидДвиженияПриход = <?""Вид движения"", ВыборВарианта, ""Приход"", ""Истина"", ""Расход"", ""Ложь"">;
Комментарий = ""<?""Комментарий к документу"">"";

ДанныеЗаполнения = ДокМенеджер.ПараметрыЗаполнения(МетаданныеРегистра, ТабКорректировки, ЭтоВидДвиженияПриход, ДатаКорректировки, Комментарий);
ДокКорректировки = ОбъектыАПИ.НовыйДокумент(ДокМенеджер, ДанныеЗаполнения, Ложь); //ВАЖНО! Возвращается объект типа Обработка.АПИ_ДокументОбъект"}
},
{0,
{"Корректировка остатков РН с примером",0,0,"[Новый]Корректировка остатков с примером","ДокМенеджер = Документы.ВводОстатковПоРегистру;
ТабКорректировки  = <?>//Таблица с движениями. Достаточно наличие полей с измерениями и ресурсами. 
ДатаКорректировки = //Дата, которой будут произведены корректировки

МетаданныеРегистра = Метаданные.РегистрыНакопления.<?"""", РегистрНакопления>;
ЭтоВидДвиженияПриход = <?""Вид движения"", ВыборВарианта, ""Приход"", ""Истина"", ""Расход"", ""Ложь"">;
Комментарий = ""<?""Комментарий к документу"">"";

ДанныеЗаполнения = ДокМенеджер.ПараметрыЗаполнения(МетаданныеРегистра, ТабКорректировки, ЭтоВидДвиженияПриход, ДатаКорректировки, Комментарий);
ДокКорректировки = ОбъектыАПИ.НовыйДокумент(ДокМенеджер, ДанныеЗаполнения, Ложь); //ВАЖНО! Возвращается объект типа Обработка.АПИ_ДокументОбъект
Если Ложь Тогда ДокКорректировки = Обработки.АПИ_ДокументОбъект.Создать(); КонецЕсли;

//Пример дальнейшего использования
Если Не ДокКорректировки.ПровестиНеоперативно() Тогда
	ТекстОшибки = ДокКорректировки.ПредставлениеОшибки();
	Результат = Ложь;
Иначе
	ДокСсылка = ДокКорректировки.Ссылка;
	ДокОбъект = ДокКорректировки.Объект;
	Результат = Истина;
КонецЕсли;


"}
}
}
}